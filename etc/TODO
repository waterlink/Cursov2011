1) robocore:
   OK	- create interface for z0rch's program and for BTExecutor.java
   OK	- create test classes, that emulates robot
	- code both emulators to be really emulators of something ;)
		- test development mode (hidden hot-key or something like that)
		  OK	- world
				emulator of the world, this is a real map at all, only robot have an access to it, and test initializer
		  OK	- robot
				emulator of robot, interacts with a robocore and world
				  OK	- move
				  OK	- beep
				  OK	- light
				  OK	- obstacles
			  OK	- connects with a btexecutor emulator, answers on his questions, and moves, as it asks, virtually
			  OK	- log every command, and a result of it, and a state of a robot at the end of completition of command
		  T	- viewer
				visual (text or gui ?) emulator of robot's log, it knows all real map
		  OK	- btexecutor
				connects to robot and sends a commands to him, gets a result of it
		  OK	- zprog
				connects with btexecutor, only sends commands, but moving in coordinates
		  OK	- mprog
				loads a map (it could be not 100 % the same as real map, so this is a main trick)
				gets two coords
				determines is it possible to get from A to B
				if so, returns the best way
   OK	- improg - Markelov's module interface
2) guicore	{winapi for WIN_target} and {opengl or qt for LINUX_target}
	- messaging system
	  TWOK	1) component, form - abstracts, {winapi partially, there still some todo's in code}
	  OK	2) messager - just a class-method delegate
	  OK	3) namer
	  OK	4) message & param interfaces (
				p	text, 
				m	activate, 
				m	select, 
				p	enable, 
				pm	size&position, 
				m	mouse, 
				m	paint
			)
  WOK	- client
  WOK	- menu
  WOK	- button
  TOK	- bitbutton
  WOK	- toolbox	
		- now toolbox showing 5 buttons to change marker mode
			- select mode ()
			- start point mode (S)
			- target mode (T)
			- multitarget mode (M)
			- free mode (F)
  WOK	- view - seems to be working, maybe needs some refactor and documentation
	OK	- code bit copy primitive ( copy from datamanager using vectored array realization, needs a sizex & sizey )
		- found some bug, after coding another module, i don't know what is it, but, when using toolbox map changing colors
  WOK	- status
######	- popup, don't need now
  TWOK	- properties
   T	- make this all mess for winapi (W-mark)
	- make this all mess for linux (l-mark)
	- complete all todo's (T-mark)
3) filecore
  OK	- filesystem
  OK	- file
		seems to be working perfect
  WOK	- pather
  TOK	- map loading
		loads only a test format, i don't know a real format
4) mapcore
  TOK	- work with filecore to read chosen map from file
		created only test class, i don't know format still
  int	- integer coordinate system (or real ?)
  Tabs	- absolute coordinate system (problem with determining start point)
		call NP-area strategy, which determines area template (a piece of a map, rectangle or circular ?),
		searches this template in our map, and
		if there more than one matches, ask user to choose one.
			still it'll be just asking of user
  FOK	- mapmanager
	   OK	- selectmode
	   F	- freemode
			changed todo-mark to future-mark
	   OK	- show map (here might be some problems, need to add bits functionallity for view)
			- so, i can't stretch this fucking map ? is ***Blt is only for bitmaps?
				- done, problem was with a compatible dc, compatible bitmap must be chosen first
	   OK	- done edge adding, and startpoint/target <-> target|multitarget relating
	   OK	- done offset setup
	   OK	- make a decoding of coords relatively to map size
			- done
  OK	- mapsync
		- make a map stretching
		seems to be done
5) fogcore - no module for now, this functionallity would be refactored later to this module
  TOK	- exploration of map
		made this in test map class as 0-value - fogged position 
6) markercore
  AOK	- marker
  TOK	- start point
		- need to make startpoint be fully in charge of strategy type
	  OK	- targets and multitargets must not cross in one scenario
  OK	- target
	  OK	- conflicts with multitarget
  AOK	- edge
	  OK	code a real edge
	  OK	- simpleedge is done - always gray for now, just for test purposes
  OK	- multitarget
	  OK	- conflicts with target
  OK	- properties of markers and edges
  OK	- markermap
  OK	- directionoffset
  OKF?	- propertymanager
	  OK	- beep
	  OKF?	- light (intensivity is for future and under question)
	  F	- coords
	  F	- name ?
	  OK	- delegates to guicore/properties
	- realedge
		it must be done with color determining, this could be done after refactoring in strategycore
7) scenariocore	-	wtf?? i've forgotten that thing )), ok, i'll apply it to strategies, when they'll be fine
  OK	- vector of commands i think
  OK	- load
  OK	- save
  FOK	- prepare (start point)
		- autodetect position is very hard problem, it wasn't so hard by a first sight
  OK	- run
  T?	- cancel (??? maybe ???)
  TOK	- command class
8) strategycore
  OK	- strategy interface
  FOK	- optimalstrategy for targets
		use Markelov's module to determine the best way for each edge
		use z0rch's module to control the robot
	  F	- need to do through scenariocore and with properties applied
	  OK	- there must be marking of edges
	  OK	- refactor function go into two: waycalc and go
  F	- non-optimalstrategy for targets
		use Manhetton-way, as a way
		use z0rch's module to control the robot
  T	- optimalstrategy for multitargets
		use Gamilton-way algo to determine best way
		use z0rch's module to control the robot
  T	- non-optimalstrategy for multitargets
		use geometrical greed algo
		use z0rch's module to control the robot
  F	- NP area template determinant
		dfs, i think, using BTExecutor to control robot, algo mine
9) utilcore
  OK	- string tokenizer
  FOK	- logger
		- it's reasonable to make a message specification for each function, or function part, eg
			Wguicore--Wview::dispatch(paint)::debug: - is specification
  OK	- mather
10) maincore
  TOK	- logic
		main program logic
		- modify menu:
		  OK	- file
				- load map
				- save map ? (reasonable only with fogcore completed)
			  OK	- exit
			- scenario
				- load scenario
				- save scenario
				- run scenario
			- test
				- test run
		  OK	- help
				- instruction
			  OK	- about
  OK	- datamanager
  OK	- vectored - array for datamanager

